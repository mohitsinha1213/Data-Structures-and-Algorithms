class Solution(object):
    def shortestCommonSupersequence(self, str1, str2):
        n = len(str1)
        m = len(str2)
        
        # Step 1: Build LCS table
        dp = [[0 for _ in range(m+1)] for _ in range(n+1)]

        for i in range(1, n+1):
            for j in range(1, m+1):
                if str1[i-1] == str2[j-1]:
                    dp[i][j] = 1 + dp[i-1][j-1]
                else:
                    dp[i][j] = max(dp[i-1][j], dp[i][j-1])

        # Step 2: Build the shortest supersequence from dp table
        i, j = n, m
        answer = []

        while i > 0 and j > 0:
            if str1[i-1] == str2[j-1]:
                answer.append(str1[i-1])
                i -= 1
                j -= 1
            else:
                if dp[i-1][j] > dp[i][j-1]:
                    answer.append(str1[i-1])
                    i -= 1                                    ### We need to include both the characters in answer and only one if Common
                else:
                    answer.append(str2[j-1])
                    j -= 1

        # Add remaining characters (if any)
        while i > 0:
            answer.append(str1[i-1])
            i -= 1

        while j > 0:
            answer.append(str2[j-1])
            j -= 1

        # Step 3: Reverse the answer (since we built it backwards)
        return answer[::-1])
