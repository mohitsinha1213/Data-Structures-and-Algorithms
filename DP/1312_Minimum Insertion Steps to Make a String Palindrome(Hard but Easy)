class Solution(object):
    def minInsertions(self, s):
        """
        :type s: str
        :rtype: int
        """
        X = s
        Y = s[::-1]
        n = len(X)
        m = len(Y)
        dp = [[None for _ in range(m+1)]for _ in range (n+1)]
        for i in range(n+1):
            for j in range(m+1):
                if i == 0 or j == 0:
                    dp[i][j] = 0
    
        for i in range(1, n+1):
            for j in range(1, m+1):
                if X[i-1] == Y[j-1]:
                    dp[i][j] = 1 + dp[i-1][j-1]
                else:
                    dp[i][j] = max(dp[i-1][j] , dp[i][j-1])
    
        lcs_length = dp[n][m]

        # Minimum number of Insertion/Deletion = Length of String - length of LCS

        return len(s) - lcs_length
